@using RentOfWorkshopsCore.Validation
@using System.ComponentModel
@inherits FieldBase

<div class="container" margin="20">
    <label class="unselectable">
        @Title
    </label>
</div>
<div class="container">
    <input class="@_inputClass form-control unselectable" value="@Value" @oninput=OnInput/>
</div>
<div class="invalid-feedback">
    @_invalidValueMessage
</div>

@code {
    private void OnInput(ChangeEventArgs e)
    {
        _value = e.Value.ToString();
        ValueValidation();
    }

    protected override void ValueValidation()
    {
        TypeConverter typeConverter = TypeDescriptor.GetConverter(typeof(decimal));
        _invalidValueMessage = "";
        _inputClass = "";

        if(typeConverter.IsValid(_value))
        {
            _invalidValueMessage = "";
            _inputClass = "";
            ValueCallback.InvokeAsync(_value.ToString());
        }
        else
        {
            _inputClass = "is-invalid";
            _invalidValueMessage = "Incorrect input";
        }
    }
}

