@using RentOfWorkshopsCore.Validation
@inherits FieldComponent

<div class="container" margin="20">
    <label class="unselectable">
        @Title
    </label>
</div>
<div class="container">
    <input type=date class="@_inputClass form-control unselectable" @oninput=OnInput/>
</div>
<div class="invalid-feedback">
    @_invalidValueMessage
</div>

@code {
    [Parameter]
    public EventCallback<DateTime> DateCallback { get; set; }

    private void OnInput(ChangeEventArgs e)
    {
        _value = e.Value;
        ValueValidation();
    }

    protected override void ValueValidation()
    {

        _invalidValueMessage = "";
        _inputClass = "";
        try
        {
            _invalidValueMessage = "";
            _inputClass = "";
            Validation.DateValidation(Convert.ToDateTime(_value));
            DateCallback.InvokeAsync(Convert.ToDateTime(_value));
        }
        catch(Exception ex)
        {
            _inputClass = "is-invalid";
            _invalidValueMessage = ex.Message;
        }
    }
}
