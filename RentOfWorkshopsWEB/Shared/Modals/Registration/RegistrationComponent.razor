@using RentOfWorkshopsCore.DBConnection
@using RentOfWorkshopsCore.DBContext
@inherits Modals.ModalBaseComponent

<div class="@ModalClass" tabindex="-1" role="dialog" style="@ModalDisplay">
    <div class="modal-dialog modal-dialog-scrollable" role="document" >
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title unselectable">
                    Зарегистрироваться
                </h5>
            </div>
            <div class="modal-body">
                <DataFieldComponent Title="Имя" ValueCallback=OnFirstNameCB/>
                <DataFieldComponent Title="Фамилия" ValueCallback=OnLastNameCB/>
                <DateFieldComponent Title="Дата рождения" DateCallback=OnBirthDateCB/>
                <PhoneFieldComponent Title="Номер" ValueCallback=OnNumberCB/>
                <EmailFieldComponent Title="E-mail" ValueCallback=OnEmailCB/>
                <DataFieldComponent Title="Логин" ValueCallback=OnLoginCB/>
                <DataFieldComponent InputType="password" Title="Пароль" ValueCallback=OnPWCB/>
                <DataFieldComponent InputType="password" Title="Повторите пароль" ValueCallback=OnRPWCB/>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="AddUser">Зарегистрироваться</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">Отмена</button>
            </div>
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"/>
}

@code {
    private string _firstName;
    private string _lastName;
    private DateTime _birthDate;
    private string _phoneNumber;
    private string _email;
    private string _login;
    private string _password;
    private string _repeatPassword;

    private bool _isDisabled;

    private void AddUser()
    {
        Client newClient = new Client();
        newClient.FirstName = _firstName;
        newClient.LastName = _lastName;
        newClient.BirthDate = _birthDate;
        newClient.Email = _email + "@gmail.com";
        newClient.PhoneNumber = "+" + _phoneNumber;

        User newUser = new User();

        foreach(var user in SQLConnection.GetAllUsers())
        {
            if (user.Login == _login)
                return;
        }

        if (_password != _repeatPassword)
            return;

        newUser.Login = _login;
        newUser.Password = _password;

        try
        {
            SQLConnection.AddClient(newClient);
            newUser.ClientId = newClient.Id;
            newUser.RoleId = 2;
            SQLConnection.AddUser(newUser);
        }
        catch
        {}

        Close();
    }

    private void OnFirstNameCB(string value)
    {
        _firstName = value;
    }

    private void OnLastNameCB(string value)
    {
        _lastName = value;
    }

    private void OnBirthDateCB(DateTime value)
    {
        _birthDate = value;
    }

    private void OnNumberCB(string value)
    {
        _phoneNumber = value;
    }

    private void OnEmailCB(string value)
    {
        _email = value;
    }

    private void OnLoginCB(string value)
    {
        _login = value;
    }

    private void OnPWCB(string value)
    {
        _password = value;
    }

    private void OnRPWCB(string value)
    {
        _repeatPassword = value;
    }
}
