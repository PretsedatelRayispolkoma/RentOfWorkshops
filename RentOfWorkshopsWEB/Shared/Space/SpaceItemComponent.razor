@using RentOfWorkshopsCore.DBConnection
@using RentOfWorkshopsCore.DBContext
@using RentOfWorkshopsWEB.Shared.Modals

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject UserContext UserContext
@inject SpaceCollection SpaceCollection

<div class="space">
    <div/>
    <div class="space-item">
        @if(_photoBytes != null)
        {
            <img class="space-image" src="data:image/bmp;base64,@(Convert.ToBase64String(_photoBytes))"/>
        }
        else
        {
            <img class="space-image" src="images/noimage.jpg"/>
        }
        <div class="space-item-info">
            <div class="space-item-title">
                <a class="space-item-title-a" @onclick="NavigateIntoSpace">@Space.TypeOfSpace.Name</a>
            </div>
            <div class="secondary-info">
                <div class="address">
                    <p class="secondary-info-p">@Space.House.Street.Name, </p>
                    <p class="secondary-info-p">@Space.House.Number</p>
                </div>
            </div>
        </div>
        <div class="space-item-info-numbers">
            <div>
                 <p class="space-item-info-numbers-p">@Space.AmountPerHour руб./час</p>
            </div>
            <div>
               <p class="space-item-info-numbers-p">@Space.Square кв. м</p>
            </div>
        </div>
        @if(UserContext.User.RoleId == 2)
        {
            if(!UserContext.HasRent)
            {
                <div class="make-order">
                    <button class="make-order-btn" @onclick=OpenRentModal>Rent</button>
                </div>
            }          
        }
        else if(UserContext.User.RoleId == 1)
        {
            <div class="update-remove-btn">
                <div>
                    <i class="fa-solid fa-pen"></i>
                </div>
                <div>
                    <i class="fa-solid fa-trash"></i>
                </div>               
            </div>
        }
        else
        {
            
        }
    </div>
    <div/>
</div>

<AddRentComponent RentCallBack=CreateRent @ref=_rentComponent/>

@code {
    [Parameter]
    public Space Space { get; set; }

    private AddRentComponent _rentComponent;

    private byte[] _photoBytes;

    protected override Task OnInitializedAsync()
    {
        if(Space.Picture != null)
            _photoBytes = Space.Picture;

        var rent = SQLConnection.GetRents(UserContext.User.ClientId).Where(p => p.EndDate > DateTime.Now).FirstOrDefault();
        if (rent == null)
        {
            SQLConnection.AttachSpace(Space);
            Space.StatusId = 1;
            SQLConnection.Save();
        }
        return base.OnInitializedAsync();
    }

    private void OpenRentModal()
    {
        if (Space.StatusId != 2)
        {
            _rentComponent.Open();
        }
        else
            return;
    }

    private void CreateRent(int rentHours)
    {
        Rent rent = new Rent();
        rent.ClientId = UserContext.User.ClientId;
        rent.SpaceId = Space.Id;
        rent.RentHours = rentHours;
        DateTime datetime = DateTime.Now;
        rent.EndDate = datetime.AddHours(rentHours);
        rent.TotalAmount = Space.AmountPerHour * rentHours;
        SQLConnection.AttachSpace(Space);
        Space.StatusId = 2;
        SQLConnection.Save();
        SQLConnection.AddRent(rent);
        UserContext.HasRent = true;
        SpaceCollection.UpdateList();
    }

    private async void NavigateIntoSpace()
    {
        await JSRuntime.InvokeAsync<object>("open", $"space-info/{Space.Id}");
    }
}
