@using RentOfWorkshopsCore.DBConnection
@using RentOfWorkshopsCore.DBContext

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<div class="space">
    <div/>
    <div class="space-item">
        @if(_photoBytes != null)
        {
            <img class="space-image" src="data:image/bmp;base64,@(Convert.ToBase64String(_photoBytes))"/>
        }
        else
        {
            <img class="space-image" src="images/noimage.jpg"/>
        }
        <div class="space-item-info">
            <div class="space-item-title">
                <a class="space-item-title-a" @onclick="NavigateIntoSpace">@Space.TypeOfSpace.Name</a>
            </div>
            <div class="secondary-info">
                <div class="address">
                    <p class="secondary-info-p">@Space.House.Street.Name, </p>
                    <p class="secondary-info-p">@Space.House.Number</p>
                </div>
            </div>
        </div>
        <div class="space-item-info-numbers">
            <div>
                 <p class="space-item-info-numbers-p">@Space.AmountPerHour руб./час</p>
            </div>
            <div>
               <p class="space-item-info-numbers-p">@Space.Square кв. м</p>
            </div>
        </div>
        <div class="make-order">
            <button class="make-order-btn">Rent</button>
        </div>
    </div>
    <div/>
</div>
@code {
    [Parameter]
    public Space Space { get; set; }

    private byte[] _photoBytes;

    protected override Task OnInitializedAsync()
    {
        if(Space.Picture != null)
            _photoBytes = Space.Picture;
        return base.OnInitializedAsync();
    }
    
    private async void NavigateIntoSpace()
    {
        await JSRuntime.InvokeAsync<object>("open", $"space-info/{Space.Id}");
    }
}
